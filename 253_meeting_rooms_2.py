# class Solution:
#     def __init__(self):
#         self.rooms = 0
#         self.minutes_dict = {}
    
#     def minMeetingRooms(self, intervals):
#         for meeting in intervals:
#             for minute in range(meeting[0], meeting[1]):
#                 if minute in self.minutes_dict:
#                     self.minutes_dict[minute] += 1
#                 else:
#                     self.minutes_dict[minute] = 1
        
#         return sorted(self.minutes_dict.values())[-1]


class Solution:
    def __init__(self):
        self.rooms = 0
        self.minutes_dict = {}
    
    def first_meeting(self, intervals):
        start = 1_000_001
        for meeting in intervals:
            if meeting[0] < start:
                start = meeting[0]
        return start
    
    def last_meeting(self, intervals):
        finish = 0
        for meeting in intervals:
            if meeting[1] > finish:
                finish = meeting[1]
        return finish
    
    def minMeetingRooms(self, intervals):
        start = self.first_meeting(intervals)
        finish = self.last_meeting(intervals)
        self.minutes_dict = {n:0 for n in range(start, finish)} 
        
        for meeting in intervals:
            for minute in range(meeting[0], meeting[1]):
                    self.minutes_dict[minute] += 1
        return sorted(self.minutes_dict.values())[-1]


test1 = Solution()
print(test1.minMeetingRooms([[0,30],[5,10],[15,20]]))

test2 = Solution()
print(test2.minMeetingRooms([[64738,614406],[211748,780229],[208641,307338],[499908,869489],[218907,889449],[177201,481150],[123679,384415],[120440,404695],[191810,491295],[800783,826206],[165175,221995],[420412,799259],[484168,617671],[746410,886281],[765198,792311],[493853,971285],[194579,313372],[119757,766274],[101315,917883],[557309,599256],[167729,723580],[731216,988021],[225883,752657],[588461,854166],[231328,285640],[772811,869625],[892212,973218],[143535,306402],[336799,998119],[65892,767719],[380440,518918],[321447,558462],[54489,234291],[43934,44986],[11260,968186],[248987,707178],[355162,798511],[661962,781083],[149228,412762],[71084,953153],[44890,655659],[708781,956341],[251847,707658],[650743,932826],[561965,814428],[697026,932724],[583473,919161],[463638,951519],[769086,785893],[17912,923570],[423089,653531],[317269,395886],[412117,701471],[465312,520002],[168739,770178],[624091,814316],[143729,249836],[699196,879379],[585322,989087],[501009,949840],[424092,580498],[282845,345477],[453883,926476],[392148,878695],[471772,771547],[339375,590100],[110499,619323],[8713,291093],[268241,283247],[160815,621452],[168922,810532],[355051,377247],[10461,488835],[220598,261326],[403537,438947],[221492,640708],[114702,926457],[166567,477230],[856127,882961],[218411,256327],[184364,909088],[130802,828793],[312028,811716],[294638,839683],[269329,343517],[167968,391811],[25351,369583],[210660,454598],[166834,576380],[296440,873280],[660142,822072],[33441,778393],[456500,955635],[59220,954158],[306295,429913],[110402,448322],[44523,88192],[231386,353197],[120940,902781],[348758,597599],[329467,664450],[208411,890114],[230238,516885],[434113,602358],[349759,419831],[10689,308144],[94526,180723],[435280,986655],[611999,690154],[75208,395348],[403243,489260],[498884,611075],[487209,863242],[13900,873774],[656706,782943],[53478,586952],[226216,723114],[554799,922759],[467777,689913],[80630,147482],[277803,506346],[532240,976029],[206622,761192],[148277,985819],[10879,807349],[952227,971268],[172074,919866],[239230,384499],[607687,984661],[4405,264532],[41071,437502],[432603,661142],[144398,907360],[139605,360037],[943191,997317],[12894,171584],[382477,800157],[452077,518175],[208007,398880],[375250,489928],[384503,726837],[278181,628759],[114470,635575],[382297,733713],[156559,874172],[507016,815520],[164461,532215],[17332,536971],[418721,911117],[11497,14032]]))

test3 = Solution()
print(test3.minMeetingRooms([[55720,349290],[688809,868579],[405490,841727],[145683,162453],[161225,936277],[319899,784036],[47904,139575],[58916,998828],[223305,745027],[353070,801099],[498237,899576],[545153,689213],[580153,668329],[36374,364587],[73797,257807],[389937,930931],[238654,297234],[222415,942372],[83322,317295],[53474,516376],[78109,194849],[312232,728350],[62606,892477],[289983,677972],[524923,626259],[421051,862946],[854186,876721],[398669,740947],[198520,864653],[764076,948535],[51130,226137],[273686,541633],[59923,106998],[206544,211760],[754288,843998],[850133,982427],[559760,676574],[189946,459169],[934775,952899],[195284,312052],[75317,138600],[84724,484201],[3472,970066],[182813,247978],[113082,897914],[443140,666044],[140111,928781],[322697,855303],[238006,298073],[178580,740526],[43876,97211],[76529,458293],[586411,809637],[513611,518730],[262290,391753],[169619,895289],[550535,708133],[205321,997268],[278572,445336],[172270,179282],[879628,991532],[509348,541320],[301939,470129],[21603,678763],[450526,731148],[239862,974936],[10253,255308],[213914,908486],[455324,816438],[62108,964099],[167976,798660],[219825,315546],[172611,389151],[118319,658061],[402935,823442],[593991,783234],[426150,943246],[289753,692787],[447005,816658],[327385,440307],[249162,321630],[429499,595607],[381038,475281],[583186,989552],[655808,986935],[144494,825667],[24238,483480],[122773,632790],[715548,934283],[41838,477020],[691714,983762],[132740,404906],[471526,819622],[34304,215501],[623145,768663],[373850,673373],[560514,869162],[736155,882633],[491072,985459],[238611,953699],[164538,615999],[252995,535799],[475528,482423],[4941,673059],[196736,421327],[681519,849447],[81674,95942],[741860,904793],[504991,649586],[344002,772544],[87001,853983],[231865,812943],[198253,713577],[181318,481445],[677759,884948],[844883,903007],[8059,248529],[843579,921791],[94492,853040],[419339,421774],[316916,905120],[297521,309109],[583854,600414],[377707,608513],[406966,485538],[294892,792676],[580154,723401],[225277,534109],[417813,959630],[182133,292049],[64994,842555],[51116,314039],[509615,872446],[115887,510640],[256739,523185],[445024,672722],[274078,898657],[591988,707638],[891114,908492],[493026,914060],[312207,475083],[556210,841875],[264146,622094],[82996,521419],[492091,699531],[87732,986277],[89747,721583],[90224,915337],[634391,941405],[428041,460798]]))